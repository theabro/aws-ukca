#### Install UM additions

- name: Install UM dependencies
  apt:
    pkg:
    - mpich
    - libnetcdf-dev
    - libhdf5-serial-dev
    - netcdf-bin
    - libnetcdff-dev
    - libnetcdff6
    - python-numpy
    - python-dev
    - python-mock
    - zenity
    - "{{ grib_library }}"

- name: Install LaTeX (long)
  apt:
    pkg:
    - texlive
    - texlive-latex-extra
    - texlive-generic-extra
    - texlive-science
    - texlive-xetex
    - texlive-fonts-recommended
    - texlive-plain-generic

- name: Add mule requirement
  lineinfile:
    dest: /usr/lib/python2.7/dist-packages/mule.pth
    line: "/home/vagrant/umdir/mule/lib"
    create: yes

- name: Update .profile with UMDIR/bin in PATH
  blockinfile:
    block: "{{ lookup('file', 'profile_umdir') }}"
    path: /home/{{ username }}/.profile
    marker: "# {mark} ANSIBLE MANAGED BLOCK UMDIR"

- name: Update .bashrc with UMDIR
  blockinfile:
    block: "{{ lookup('file', 'bashrc_umdir') }}"
    path: /home/{{ username }}/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK UMDIR"


# Install Iris from miniconda - need particular versions of packages
# to get tutorial scripts to work correctly
- block:
    - name: create Downloads directory
      file:
        path: /home/{{ username }}/Downloads
        state: directory
    - name: Download Miniconda
      get_url:
        url: https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: /home/{{ username }}/Downloads
        mode: 0755
    - name: Run miniconda script
      shell: /home/{{ username }}/Downloads/Miniconda3-latest-Linux-x86_64.sh -b
      args:
        executable: /bin/bash
    - name: Update conda base
      shell: PATH=~/miniconda3/bin:$PATH conda update -n base -c defaults conda -y
      args:
        executable: /bin/bash
    - name: Install mamba via conda (long)
      shell: PATH=~/miniconda3/bin:$PATH conda install mamba -n base -c conda-forge -y
      args:
        executable: /bin/bash
    - name: Install python packages via mamba (very long)
      shell: PATH=~/miniconda3/bin:$PATH mamba install cf-python==3.13.1 cf-plot==3.1.28 udunits2 cartopy==0.20.0 cfdm=1.9.0.4 mpich esmpy iris mo_pack cf-units==3.1.1 cftime==1.6.2 matplotlib==3.5.2 nc-time-axis ipython jupyter jupyterlab -c conda-forge -y
      #shell: PATH=~/miniconda3/bin:$PATH mamba install iris mo_pack ipython -c conda-forge -y
      args:
        executable: /bin/bash
    - name: Install cfview via pip
      shell: PATH=~/miniconda3/bin:$PATH pip install cf-view
      args:
        executable: /bin/bash
    - name: Build the UM file reading routines
      make:
        chdir: /home/ubuntu/miniconda3/lib/python3.9/site-packages/cf/umread_lib/c-lib
    - name: Remove the self.setGeometry declaration to allow cfview to have resizable windows
      lineinfile:
        path: /home/ubuntu/miniconda3/bin/cfview
        regexp: 'self.setGeometry'
        state: absent
    - name: Update .bashrc with python specifics
      blockinfile:
        block: "{{ lookup('file', 'bashrc_python') }}"
        path: /home/{{ username }}/.bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK CONDA"
    - name: Remove Miniconda3-latest-Linux-x86_64.sh file
      file:
        path: /home/{{ username }}/Downloads/Miniconda3-latest-Linux-x86_64.sh
        state: absent
  become: yes
  become_user: "{{ username }}"


# Set up .metomi additions
- block:
    - name: create .metomi directory
      file:
        path: /home/{{ username }}/.metomi/fcm
        state: directory
    - name: Copy keyword.cfg file
      copy:
        src: keyword
        dest: /home/{{ username }}/.metomi/fcm/keyword.cfg
    - name: Set syntax highlighting in .bashrc
      lineinfile:
        dest: /home/{{ username }}/.metomi/rose.conf
        create: yes
        line: "{{ item }}"
      with_items:
        - "[rosie-id]"
        - "prefix-username.u="
        - ""
        - "[rose-ana]"
        - "kgo-database=.true."
  become: yes
  become_user: "{{ username }}"
